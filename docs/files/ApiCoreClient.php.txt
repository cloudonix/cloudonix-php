<?php
/**
 * cloudonix-php - A PHP Class for interfacing with the Cloudonix API.Core Interface
 *
 * Cloudonix API.Core provides its users with a programmable API to manage and control their Cloudonix platform
 * account, domains, applications, trunks, DNIDs, subscribers and more. The class library provides its entire
 * functionality via models, located under the /src/Models/ApiCore/ directory.
 *
 * @author: Nir Simionovich
 * @license: LGPL 3.0 (https://www.gnu.org/licenses/lgpl-3.0.en.html)
 * @copyright: Cloudonix, Inc. May 2019. All Rights Reserved.
 * @site: https://cloudonix.io
 */

/**
 * @internal
 */
namespace Cloudonix;

use Psr\Http\Message\ResponseInterface;
use GuzzleHttp\Client;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\Request;
use Cloudonix\Common\Environment;
use Cloudonix\Common\CxLogger;

/**
 * Class ApiCoreClient - Your Cloudonix API.Core Client Object
 *
 * When instantiating a new ApiCoreClient Object, the credentials will be read from the credentials.yaml file.
 * By default, unless other specified by the CX_ENV environment variable - ApiCoreClient will load the 'production'
 * credentials set.
 *
 * @example src/samples/credentials.yaml A sample credentials.yaml sample file
 * @example src/samples/sample_apicoreclient.php A basic usage example of ApiCoreClient
 *
 * @package Cloudonix
 */
class ApiCoreClient
{

	/** @var \GuzzleHttp\Client The assigned HTTP Client connection */
	public $apiClientConnector = null;

	/** @var \Monolog\Handler\SyslogHandler The Monolog logger facility */
	public $logger = null;

	/** @var integer The tenant ID initiating the API, for system privilage - null */
	public $tenantId = null;

	/**
	 * ApiCoreClient constructor.
	 * @param string $environment Environment to load from credentials.yaml
	 */
	public function __construct($environment = null)
	{
		try {

			/** @var object     Load configuration object for my environment */
			$myEnvironment = new Environment($environment);

			/** @var array      HTTP Client Default Configuration */
			$client_configuration = [
				'base_uri' => $myEnvironment->cx_url,
				"headers" => [
					"Content-Type" => "application/json",
					"Authorization" => "bearer " . $myEnvironment->cx_apikey,
					'timeout' => 5
				]
			];

			$this->tenantId = $myEnvironment->cx_tenant_id;
			$this->apiClientConnector = new \GuzzleHttp\Client($client_configuration);
			$this->apiClientLogger = new CxLogger($myEnvironment->cx_debug);

		} catch (\Exception $e) {
			$this->logger->crit("Exception raised in ApiCoreClient", [
				"file" => $e->getFile(),
				"line" => $e->getLine(),
				"error" => $e->getMessage()
			]);
			die("Exception Raised at " . $e->getFile() . " Line: " . $e->getLine() . " Message: [" . $e->getMessage() . "]");
		}
	}

	/**
	 * ApiCoreClient destructor
	 */
	public function __destruct()
	{
		// TODO: Implement __destruct() method.
	}

}
