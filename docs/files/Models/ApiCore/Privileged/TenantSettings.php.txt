<?php
/**
 * cloudonix-php - A PHP Class for interfacing with the Cloudonix API.Core Interface
 *
 * TenantSettings Data Model
 *
 * The TenantSettings data model is a privileged data model API. In order to access this data model, you are
 * required to use a "System Privileged" token key.
 *
 * @author: Nir Simionovich
 * @license: LGPL 3.0 (https://www.gnu.org/licenses/lgpl-3.0.en.html)
 * @copyright: Cloudonix, Inc. May 2019. All Rights Reserved.
 * @site: https://cloudonix.io
 * @package Cloudonix\ApiCore
 * @filesource
 */

namespace Cloudonix\ApiCore\Privileged;

/**
 * TenantSettings Class - Cloudonix Api.Core TenantSettings Data Model API
 *
 * More information can be found at https://cloudonix.io/wp-content/uploads/2018/12/Cloudonix-Platform-Administrator-Guide.pdf
 *
 * @package Cloudonix\ApiCore\Priviliged
 */
class TenantSettings
{
	/** @var ApiCoreClient $apiClientConnector The previously initiated ApiCoreClient object */
	public $apiClientConnector = null;

	/** @var integer $tenantId The tenant ID initiating the API, for system privilage - null */
	public $tenantId = null;

	/**
	 * TenantSettings constructor.
	 * @param ApiCoreClient $connector Cloudonix ApiCoreClient object
	 */
	public function __construct($connector = null)
	{
		try {

			if ($connector == null) {
				throw new \Exception("Input values can not be null");
			}

			$this->apiClientConnector = $connector->apiClientConnector;
			$this->tenantId = $connector->tenantId;

		} catch (\Exception $e) {
			die("Exception Raised at " . $e->getFile() . " Line: " . $e->getLine() . " Message: [" . $e->getMessage() . "]");
		}
	}

	/**
	 * TenantSettings destructor.
	 */
	public function __destruct()
	{
		// TODO: Implement __destruct() method.
	}

	/**
	 * Get Cloudonix Tenant Settings
	 *
	 * @param integer $id The Cloudonix Tenant ID
	 * @param string $setting The Setting keyword in the Tenant profile to get
	 * @return mixed               A JSON object containing the remote Cloudonix response
	 */
	public function get($id = null, $setting = null)
	{
		try {

			if ($this->apiClientConnector == null) {
				throw new \Exception("Cloudonix Client had not been initialised properly");
			}

			if ($id == null) {
				throw new \Exception("Tenant ID can not be null");
			}

			$request_result = $this->apiClientConnector->request('GET', '/tenants/' . $id . "/settings/" . $setting);

			return json_decode($request_result->getBody());

		} catch (\Exception $e) {
			die("Exception Raised at " . $e->getFile() . " Line: " . $e->getLine() . " Message: [" . $e->getMessage() . "]");
		}
	}

	/**
	 * Delete A Tenant's Settings
	 *
	 * @param integer $id The Cloudonix Tenant ID
	 * @param string $setting The Setting keyword in the Tenant profile to delete
	 * @return mixed               A JSON object containing the remote Cloudonix response
	 */
	public function delete($id = null, $setting = null)
	{
		try {

			if ($this->apiClientConnector == null) {
				throw new \Exception("Cloudonix Client had not been initialised properly");
			}

			if (($id == null) || ($setting == null)) {
				throw new \Exception("Tenant ID/setting can not be null");
			}

			$request_result = $this->apiClientConnector->request('DELETE', '/tenants/' . $id . "/settings/" . $setting);

			return json_decode($request_result->getBody());

		} catch (\Exception $e) {
			die("Exception Raised at " . $e->getFile() . " Line: " . $e->getLine() . " Message: [" . $e->getMessage() . "]");
		}
	}

	/**
	 * Update a Tenant's Settings
	 *
	 * @param integer $id The Cloudonix Tenant ID
	 * @param string $setting The setting keyword in the tenant profile to update
	 * @param string $value The value to assign to the setting, designated by $setting
	 * @return mixed               A JSON object containing the remote Cloudonix response
	 */
	public function patch($id = null, $setting = null, $value = null)
	{
		try {

			if ($this->apiClientConnector == null) {
				throw new \Exception("Cloudonix Client had not been initialised properly");
			}

			if (($id == null) || ($setting == null) || ($value == null)) {
				throw new \Exception("Tenant ID/setting/value can not be null");
			}

			$input = [
				"value" => $value
			];

			$request_result = $this->apiClientConnector->request('PUT', '/tenants/' . $id . "/settings/" . $setting, ['json' => $input]);

			return json_decode($request_result->getBody());

		} catch (\Exception $e) {
			die("Exception Raised at " . $e->getFile() . " Line: " . $e->getLine() . " Message: [" . $e->getMessage() . "]");
		}
	}
}

