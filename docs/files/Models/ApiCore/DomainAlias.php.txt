<?php
/**
 * cloudonix-php - A PHP Class for interfacing with the Cloudonix API.Core Interface
 *
 * Cloudonix API.Core provides its users with a programmable API to manage and control their Cloudonix platform
 * account, domains, applications, trunks, DNIDs, subscribers and more. The class library provides its entire
 * functionality via models, located under the /src/Models/ApiCore/ directory.
 *
 * @author: Nir Simionovich
 * @license: LGPL 3.0 (https://www.gnu.org/licenses/lgpl-3.0.en.html)
 * @copyright: Cloudonix, Inc. May 2019. All Rights Reserved.
 * @site: https://cloudonix.io
 * @package Cloudonix\ApiCore
 * @filesource
 */

namespace Cloudonix\ApiCore;

/**
 * DomainAlias Class - Cloudonix Api.Core DomainAlias Data Model API
 *
 * Not all SIP based devices are created equally. As such, some devices are incapable of using a specific FQDN or
 * IP as their SIP server, while specifying a different SIP domain for credential consumption. As a backward compatibility
 * method, Cloudonix enables the creation of domain aliases, to allow these clients to use a domain alias for the SIP
 * server credentials. More information can be found at https://cloudonix.io/wp-content/uploads/2018/12/Cloudonix-Platform-Administrator-Guide.pdf
 *
 * @package Cloudonix\ApiCore
 */
class DomainAlias
{
	/** @var ApiCoreClient $apiClientConnector The previously initiated ApiCoreClient object */
	public $apiClientConnector = null;

	/** @var integer $tenantId The tenant ID initiating the API, for system privilage - null */
	public $tenantId = null;

	/**
	 * DomainAlias constructor.
	 * @param ApiCoreClient $connector Cloudonix ApiCoreClient object
	 */
	public function __construct($connector = null)
	{
		try {

			if ($connector == null) {
				throw new \Exception("Input values can not be null");
			}

			$this->apiClientConnector = $connector->apiClientConnector;
			$this->tenantId = $connector->tenantId;

		} catch (\Exception $e) {
			die("Exception Raised at " . $e->getFile() . " Line: " . $e->getLine() . " Message: [" . $e->getMessage() . "]");
		}
	}

	/**
	 * DomainAlias destructor
	 */
	public function __destruct()
	{
		// TODO: Implement __destruct() method.
	}

	/**
	 * Create a domain alias
	 *
	 * Tenant ID will be obtained from the ApiCoreClient object, if defined. If not defined, it must be defined here.
	 *
	 * @param integer $domain_id The domain ID to create a domain alias for
	 * @param string $alias The domain alias to create
	 * @param array $profile The domain alias profile
	 * @param integer $tenant_id The Tenant ID where to create the new domain (Optional)
	 * @return boolean|object False on failure or a JSON object containing the remote Cloudonix response
	 */
	public function create($domain_id = null, $alias = null, $profile = null, $tenant_id = null)
	{
		$result = false;

		return $result;
	}

	/**
	 * Get a domain alias
	 *
	 * Tenant ID will be obtained from the ApiCoreClient object, if defined. If not defined, it must be defined here.
	 *
	 * @param integer $domain_id The domain ID to create a domain alias for
	 * @param integer $tenant_id The Tenant ID where to create the new domain (Optional)
	 * @return boolean|object False on failure or a JSON object containing the remote Cloudonix response
	 */
	public function get($domain_id = null, $tenant_id = null)
	{
		$result = false;

		return $result;
	}

	/**
	 * Get domain information according to the domain name
	 *
	 * @param string $alias The domain alias to query
	 * @return boolean|object False on failure or a JSON object containing the remote Cloudonix response
	 */
	public function getDomain($alias = null)
	{
		$result = false;

		return $result;
	}

	/**
	 * Delete a domain alias
	 *
	 * Tenant ID will be obtained from the ApiCoreClient object, if defined. If not defined, it must be defined here.
	 *
	 * @param integer $domain_id The domain ID to create a domain alias for
	 * @param integer $alias_id The domain alias ID to delete
	 * @param integer $tenant_id The Tenant ID where to create the new domain (Optional)
	 * @return boolean|object False on failure or a JSON object containing the remote Cloudonix response
	 */
	public function delete($domain_id = null, $alias_id = null, $tenant_id = null)
	{
		$result = false;

		return $result;
	}
}
